## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
##

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""

## @section Common parameters
##

## @param kubeVersion Override Kubernetes version
##
kubeVersion: ""
## @param nameOverride String to partially override common.names.name
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param namespaceOverride String to fully override common.names.namespace
##
namespaceOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param clusterDomain Kubernetes cluster domain name
##
clusterDomain: cluster.local
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []

## Enable diagnostic mode in the deployment
##
diagnosticMode:
  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
  ##
  enabled: false
  ## @param diagnosticMode.command Command to override all containers in the deployment
  ##
  command:
    - sleep
  ## @param diagnosticMode.args Args to override all containers in the deployment
  ##
  args:
    - infinity

## @section IPFS subsystem parameters
## @param ipfs.logLevel logLevel for IPFS subsystem, Allowed values: error, warn, info, debug
##
ipfs:
  logLevel: "info"
  ## @param ipfs.initConfig.enabled Enable init container to initialize IPFS configuration
  ## This will provide some sane config options for a private IPFS deployment.
  initConfig:
    enabled: true
  ## @param ipfs.initKeys.enabled Enable init container to insert IPFS keys into the IPFS subsystem, this will not run if either ipfs.publicKey, ipfs.privateKey or ipfs.existingSecret are set
  initKeys:
    enabled: true
  ## @param ipfs.swarmAddrFilters List of IPFS swarm address filters to apply to the IPFS subsystem
  ##
  swarmAddrFilters:
    - /ip4/100.64.0.0/ipcidr/10
    - /ip4/169.254.0.0/ipcidr/16
    - /ip4/172.16.0.0/ipcidr/12
    - /ip4/192.0.0.0/ipcidr/24
    - /ip4/192.0.2.0/ipcidr/24
    - /ip4/192.168.0.0/ipcidr/16
    - /ip4/198.18.0.0/ipcidr/15
    - /ip4/198.51.100.0/ipcidr/24
    - /ip4/203.0.113.0/ipcidr/24
    - /ip4/240.0.0.0/ipcidr/4
    - /ip6/100::/ipcidr/64
    - /ip6/2001:2::/ipcidr/48
    - /ip6/2001:db8::/ipcidr/32
    - /ip6/fc00::/ipcidr/7
    - /ip6/fe80::/ipcidr/10
  ## @param ipfs.bootNodeAddress IPFS boot node addresses in MultiAddress format for the IPFS subsystem
  ## ref: https://multiformats.io/multiaddr/
  bootNodeAddress: ""
  ## @param ipfs.routingType IPFS routing type for the IPFS subsystem, Allowed values: "auto", "autoclient", "none", "dht", "dhtclient", and "custom".
  ## ref: https://docs.ipfs.io/concepts/routing/
  routingType: "dht"
  ## @param ipfs.binary Location of the ipfs binary in the container for the IPFS subsystem
  ##
  binary: /usr/local/bin/ipfs
  ## @param ipfs.command command to pass to customize the configuration init container for the IPFS subsystem
  ##
  command: []
  ## @param ipfs.args Arguments to pass to customize the configuration init container for the IPFS subsystem
  ##
  args: []
  ## @param ipfs.runtimeArgs Arguments to pass to the wasp-ipfs service to spawn the IPFS subsystem
  runtimeArgs:
    - daemon
    - '--migrate'
  ## @param ipfs.keyCommand command to pass to customize the key init container for the IPFS subsystem
  ##
  keyCommand: []
  ## @param ipfs.keyArgs Arguments to pass to customize the key init container for the IPFS subsystem
  ##
  keyArgs: []
  ## @param ipfs.publicKey Public key for the IPFS subsystem
  ##
  publicKey: ""
  ## @param ipfs.privateKey Private key for the IPFS subsystem
  ##
  privateKey: ""
  ## @param ipfs.existingSecret Name of an existing secret containing the IPFS private and public keys
  ##
  existingSecret: ""
  secretKeys:
    ## @param ipfs.secretKeys.publicKey Key of the public key in the existing secret
    ##
    publicKey: publicKey
    ## @param ipfs.secretKeys.privateKey Key of the private key in the existing secret
    ##
    privateKey: privateKey

## @section SQNC IPFS Service config parameters
##

## @param logLevel logLevel for nodeJS service Allowed values: error, warn, info, debug
##
logLevel: "info"
## @param healthCheckPollPeriod Health check poll period in milliseconds
##
healthCheckPollPeriod: 30000
## @param healthCheckTimeout Health check timeout in milliseconds
##
healthCheckTimeout: 2000
## Digital Catapult sqnc-ipfs image
## ref: https://hub.docker.com/r/digicatapult/sqnc-ipfs/tags/
## @param image.registry sqnc-ipfs image registry
## @param image.repository sqnc-ipfs image repository
## @param image.tag sqnc-ipfs image tag (immutable tags are recommended)
## @param image.digest sqnc-ipfs image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
## @param image.pullPolicy sqnc-ipfs image pull policy
## @param image.pullSecrets sqnc-ipfs image pull secrets
## @param image.debug Enable sqnc-ipfs image debug mode
##
image:
  registry: docker.io
  repository: digicatapult/sqnc-ipfs
  tag: v2.10.82
  digest: ""
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []
  ## Enable debug mode
  ##
  debug: false
## @param replicaCount Number of sqnc-ipfs replicas to deploy
##
replicaCount: 1
## @param containerPorts.http sqnc-ipfs HTTP container port
## @param containerPorts.swarm sqnc-ipfs IPFS subsystem Swarm container port
## @param containerPorts.api sqnc-ipfs IPFS subsystem api container port
##
containerPorts:
  http: 3000
  api: 5001
  swarm: 4001
## Configure extra options for sqnc-ipfs containers' liveness and readiness probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
## @param livenessProbe.enabled Enable livenessProbe on sqnc-ipfs containers
## @param livenessProbe.httpGet.path Path for to check for livenessProbe
## @param livenessProbe.httpGet.port Port for to check for livenessProbe
## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
## @param livenessProbe.periodSeconds Period seconds for livenessProbe
## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
## @param livenessProbe.successThreshold Success threshold for livenessProbe
##
livenessProbe:
  enabled: true
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1
## @param readinessProbe.enabled Enable readinessProbe on sqnc-ipfs containers
## @param readinessProbe.httpGet.path Path for to check for readinessProbe
## @param readinessProbe.httpGet.port Port for to check for readinessProbe
## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
## @param readinessProbe.periodSeconds Period seconds for readinessProbe
## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
## @param readinessProbe.successThreshold Success threshold for readinessProbe
##
readinessProbe:
  enabled: true
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 5
  successThreshold: 1
## @param startupProbe.enabled Enable startupProbe on sqnc-ipfs containers
## @param startupProbe.httpGet.path Path for to check for startupProbe
## @param startupProbe.httpGet.port Port for to check for startupProbe
## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
## @param startupProbe.periodSeconds Period seconds for startupProbe
## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe
## @param startupProbe.failureThreshold Failure threshold for startupProbe
## @param startupProbe.successThreshold Success threshold for startupProbe
##
startupProbe:
  enabled: false
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 10
  successThreshold: 1
## @param customLivenessProbe Custom livenessProbe that overrides the default one
##
customLivenessProbe: {}
## @param customReadinessProbe Custom readinessProbe that overrides the default one
##
customReadinessProbe: {}
## @param customStartupProbe Custom startupProbe that overrides the default one
##
customStartupProbe: {}
## sqnc-ipfs resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
## @param resources.limits The resources limits for the sqnc-ipfs containers
## @param resources.requests The requested resources for the sqnc-ipfs containers
##
resources:
  limits: {}
  requests: {}
## Configure Pods Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param podSecurityContext.enabled Enabled sqnc-ipfs pods' Security Context
## @param podSecurityContext.fsGroup Set sqnc-ipfs pod's Security Context fsGroup
##
podSecurityContext:
  enabled: true
  fsGroup: 1001
## Configure Container Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
## @param containerSecurityContext.enabled Enabled sqnc-ipfs containers' Security Context
## @param containerSecurityContext.runAsUser Set sqnc-ipfs containers' Security Context runAsUser
## @param containerSecurityContext.runAsNonRoot Set sqnc-ipfs containers' Security Context runAsNonRoot
## @param containerSecurityContext.readOnlyRootFilesystem Set sqnc-ipfs containers' Security Context runAsNonRoot
##
containerSecurityContext:
  enabled: true
  runAsUser: 1001
  runAsNonRoot: true
  readOnlyRootFilesystem: false

## @param command Override default container command (useful when using custom images)
##
command: ['./app/index.js']

## @param args Override default container args (useful when using custom images)
##
args: []
## @param hostAliases sqnc-ipfs pods host aliases
## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
##
hostAliases: []
## @param podLabels Extra labels for sqnc-ipfs pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
##
podLabels: {}
## @param podAnnotations Annotations for sqnc-ipfs pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}
## @param podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAffinityPreset: ""
## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAntiAffinityPreset: soft
## Pod Disruption Budget configuration
## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb
## @param pdb.create Enable/disable a Pod Disruption Budget creation
## @param pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
## @param pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable
##
pdb:
  create: false
  minAvailable: 1
  maxUnavailable: ""
## Autoscaling configuration
## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
## @param autoscaling.enabled Enable autoscaling for sqnc-ipfs
## @param autoscaling.minReplicas Minimum number of sqnc-ipfs replicas
## @param autoscaling.maxReplicas Maximum number of sqnc-ipfs replicas
## @param autoscaling.targetCPU Target CPU utilization percentage
## @param autoscaling.targetMemory Target Memory utilization percentage
##
autoscaling:
  enabled: false
  minReplicas: ""
  maxReplicas: ""
  targetCPU: ""
  targetMemory: ""
## Node affinity preset
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
##
nodeAffinityPreset:
  ## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ##
  type: ""
  ## @param nodeAffinityPreset.key Node label key to match. Ignored if `affinity` is set
  ##
  key: ""
  ## @param nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set
  ## E.g.
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  ##
  values: []
## @param affinity Affinity for sqnc-ipfs pods assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## NOTE: `podAffinityPreset`, `podAntiAffinityPreset`, and `nodeAffinityPreset` will be ignored when it's set
##
affinity: {}
## @param nodeSelector Node labels for sqnc-ipfs pods assignment
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}
## @param tolerations Tolerations for sqnc-ipfs pods assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []
## @param updateStrategy.type sqnc-ipfs statefulset strategy type
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
##
updateStrategy:
  ## StrategyType
  ## Can be set to RollingUpdate or OnDelete
  ##
  type: RollingUpdate
## @param podManagementPolicy Statefulset Pod management policy, it needs to be Parallel to be able to complete the cluster join
## Ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#pod-management-policies
##
podManagementPolicy: OrderedReady

## @param priorityClassName sqnc-ipfs pods' priorityClassName
##
priorityClassName: ""
## @param topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
##
topologySpreadConstraints: []
## @param schedulerName Name of the k8s scheduler (other than default) for sqnc-ipfs pods
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
schedulerName: ""
## @param terminationGracePeriodSeconds Seconds Redmine pod needs to terminate gracefully
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
##
terminationGracePeriodSeconds: ""
## @param lifecycleHooks for the sqnc-ipfs container(s) to automate configuration before or after startup
##
lifecycleHooks: {}
## @param extraEnvVars Array with extra environment variables to add to sqnc-ipfs nodes
## e.g:
## extraEnvVars:
##   - name: FOO
##     value: "bar"
##
extraEnvVars: []
## @param extraEnvVarsCM Name of existing ConfigMap containing extra env vars for sqnc-ipfs nodes
##
extraEnvVarsCM: ""
## @param extraEnvVarsSecret Name of existing Secret containing extra env vars for sqnc-ipfs nodes
##
extraEnvVarsSecret: ""
## @param extraVolumes Optionally specify extra list of additional volumes for the sqnc-ipfs pod(s)
##
extraVolumes: []
## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts for the sqnc-ipfs container(s)
##
extraVolumeMounts: []
## @param sidecars Add additional sidecar containers to the sqnc-ipfs pod(s)
## e.g:
## sidecars:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
sidecars: []
## @param initContainers Add additional init containers to the sqnc-ipfs pod(s)
## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
## e.g:
## initContainers:
##  - name: your-image-name
##    image: your-image
##    imagePullPolicy: Always
##    command: ['sh', '-c', 'echo "hello world"']
##
initContainers: []

## @section Traffic Exposure Parameters
##

## sqnc-ipfs api service parameters
##
service:
  ## @param service.type sqnc-ipfs service type
  ##
  type: ClusterIP
  ## @param service.ports.http sqnc-ipfs service HTTP port
  ##
  ports:
    http: 80
  ## Node ports to expose
  ## @param service.nodePorts.http Node port for HTTP
  ## NOTE: choose port between <30000-32767>
  ##
  nodePorts:
    http: ""
  ## @param service.clusterIP sqnc-ipfs service Cluster IP
  ## e.g.:
  ## clusterIP: None
  ##
  clusterIP: ""
  ## @param service.loadBalancerIP sqnc-ipfs service Load Balancer IP
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
  ##
  loadBalancerIP: ""
  ## @param service.loadBalancerSourceRanges sqnc-ipfs service Load Balancer sources
  ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ## e.g:
  ## loadBalancerSourceRanges:
  ##   - 10.10.10.0/24
  ##
  loadBalancerSourceRanges: []
  ## @param service.externalTrafficPolicy sqnc-ipfs service external traffic policy
  ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster
  ## @param service.annotations Additional custom annotations for sqnc-ipfs service
  ##
  annotations: {}
  ## @param service.extraPorts Extra ports to expose in sqnc-ipfs service (normally used with the `sidecars` value)
  ##
  extraPorts: []
  ## @param service.sessionAffinity Control where client requests go, to the same pod or round-robin
  ## Values: ClientIP or None
  ## ref: https://kubernetes.io/docs/user-guide/services/
  ##
  sessionAffinity: None
  ## @param service.sessionAffinityConfig Additional settings for the sessionAffinity
  ## sessionAffinityConfig:
  ##   clientIP:
  ##     timeoutSeconds: 300
  ##
  sessionAffinityConfig: {}

swarmService:
  ## @param swarmService.type sqnc-ipfs sqnc-ipfs swarm service type
  ##
  type: ClusterIP
  ## @param swarmService.ports.swarm sqnc-ipfs swarm service HTTP port
  ##
  ports:
    swarm: 4001
  ## Node ports to expose
  ## @param swarmService.nodePorts.swarm Node port for HTTP
  ## NOTE: choose port between <30000-32767>
  ##
  nodePorts:
    swarm: ""
  ## @param swarmService.clusterIP sqnc-ipfs swarm service Cluster IP
  ## e.g.:
  ## clusterIP: None
  ##
  clusterIP: ""
  ## @param  swarmService.loadBalancerIP sqnc-ipfs swarm service Load Balancer IP
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
  ##
  loadBalancerIP: ""
  ## @param swarmService.loadBalancerSourceRanges sqnc-ipfs service Load Balancer sources
  ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ## e.g:
  ## loadBalancerSourceRanges:
  ##   - 10.10.10.0/24
  ##
  loadBalancerSourceRanges: []
  ## @param swarmService.externalTrafficPolicy sqnc-ipfs swarm service external traffic policy
  ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster
  ## @param swarmService.annotations Additional custom annotations for sqnc-ipfs swarm service
  ##
  annotations: {}
  ## @param swarmService.extraPorts Extra ports to expose in sqnc-ipfs swarm service (normally used with the `sidecars` value)
  ##
  extraPorts: []
  ## @param swarmService.sessionAffinity Control where client requests go, to the same pod or round-robin
  ## Values: ClientIP or None
  ## ref: https://kubernetes.io/docs/user-guide/services/
  ##
  sessionAffinity: None
  ## @param swarmService.sessionAffinityConfig Additional settings for the sessionAffinity
  ## sessionAffinityConfig:
  ##   clientIP:
  ##     timeoutSeconds: 300
  ##
  sessionAffinityConfig: {}

apiService:
  ## @param apiService.type sqnc-ipfs sqnc-ipfs api service type
  ##
  type: ClusterIP
  ## @param apiService.ports.api sqnc-ipfs api service HTTP port
  ##
  ports:
    api: 5001
  ## Node ports to expose
  ## @param apiService.nodePorts.api Node port for HTTP
  ## NOTE: choose port between <30000-32767>
  ##
  nodePorts:
    api: ""
  ## @param apiService.clusterIP sqnc-ipfs api service Cluster IP
  ## e.g.:
  ## clusterIP: None
  ##
  clusterIP: ""
  ## @param  apiService.loadBalancerIP sqnc-ipfs api service Load Balancer IP
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
  ##
  loadBalancerIP: ""
  ## @param apiService.loadBalancerSourceRanges sqnc-ipfs service Load Balancer sources
  ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ## e.g:
  ## loadBalancerSourceRanges:
  ##   - 10.10.10.0/24
  ##
  loadBalancerSourceRanges: []
  ## @param apiService.externalTrafficPolicy sqnc-ipfs api service external traffic policy
  ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster
  ## @param apiService.annotations Additional custom annotations for sqnc-ipfs api service
  ##
  annotations: {}
  ## @param apiService.extraPorts Extra ports to expose in sqnc-ipfs api service (normally used with the `sidecars` value)
  ##
  extraPorts: []
  ## @param apiService.sessionAffinity Control where client requests go, to the same pod or round-robin
  ## Values: ClientIP or None
  ## ref: https://kubernetes.io/docs/user-guide/services/
  ##
  sessionAffinity: None
  ## @param apiService.sessionAffinityConfig Additional settings for the sessionAffinity
  ## sessionAffinityConfig:
  ##   clientIP:
  ##     timeoutSeconds: 300
  ##
  sessionAffinityConfig: {}

## @section Persistence Parameters
##

## Enable persistence using Persistent Volume Claims
## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  ## @param persistence.enabled Enable persistence using Persistent Volume Claims
  ##
  enabled: true
  ## @param persistence.mountPath Path to mount the volume at.
  ##
  mountPath: /ipfs
  ## @param persistence.subPath The subdirectory of the volume to mount to, useful in dev environments and one PV for multiple services
  ##
  subPath: ""
  ## @param persistence.storageClass Storage class of backing PVC
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: ""
  ## @param persistence.annotations Persistent Volume Claim annotations
  ##
  annotations: {}
  ## @param persistence.accessModes Persistent Volume Access Modes
  ##
  accessModes:
    - ReadWriteOnce
  ## @param persistence.size Size of data volume
  ##
  size: 1Gi
  ## @param persistence.existingClaim The name of an existing PVC to use for persistence
  ##
  existingClaim: ""
  ## @param persistence.selector Selector to match an existing Persistent Volume for WordPress data PVC
  ## If set, the PVC can't have a PV dynamically provisioned for it
  ## E.g.
  ## selector:
  ##   matchLabels:
  ##     app: my-app
  ##
  selector: {}
  ## @param persistence.dataSource Custom PVC data source
  ##
  dataSource: {}
## @section Init Container Parameters
##

## 'volumePermissions' init container parameters
## Changes the owner and group of the persistent volume mount point to runAsUser:fsGroup values
##   based on the *podSecurityContext/*containerSecurityContext parameters
##
volumePermissions:
  ## @param volumePermissions.enabled Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup`
  ##
  enabled: false
  ## Bitnami Shell image
  ## ref: https://hub.docker.com/r/bitnami/bitnami-shell/tags/
  ## @param volumePermissions.image.registry Bitnami Shell image registry
  ## @param volumePermissions.image.repository Bitnami Shell image repository
  ## @param volumePermissions.image.tag Bitnami Shell image tag (immutable tags are recommended)
  ## @param volumePermissions.image.pullPolicy Bitnami Shell image pull policy
  ## @param volumePermissions.image.pullSecrets Bitnami Shell image pull secrets
  ##
  image:
    registry: docker.io
    repository: bitnami/bitnami-shell
    tag: latest
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## Init container's resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param volumePermissions.resources.limits The resources limits for the init container
  ## @param volumePermissions.resources.requests The requested resources for the init container
  ##
  resources:
    limits: {}
    requests: {}
  ## Init container Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param volumePermissions.containerSecurityContext.runAsUser Set init container's Security Context runAsUser
  ## NOTE: when runAsUser is set to special value "auto", init container will try to chown the
  ##   data folder to auto-determined user&group, using commands: `id -u`:`id -G | cut -d" " -f2`
  ##   "auto" is especially useful for OpenShift which has scc with dynamic user ids (and 0 is not allowed)
  ##
  containerSecurityContext:
    runAsUser: 0

## @section Other Parameters
##

## ServiceAccount configuration
##
serviceAccount:
  ## @param serviceAccount.create Specifies whether a ServiceAccount should be created
  ##
  create: true
  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the common.names.fullname template
  ##
  name: ""
  ## @param serviceAccount.annotations Additional Service Account annotations (evaluated as a template)
  ##
  annotations: {}
  ## @param serviceAccount.automountServiceAccountToken Automount service account token for the server service account
  ##
  automountServiceAccountToken: true

## @section SQNC-Node Parameters
sqncNode:
  ## @param sqncNode.enabled Enable SQNC-Node subchart
  enabled: true
  ## @param sqncNode.nameOverride String to partially override sqnc-node.fullname template (will maintain the release name)
  ##
  nameOverride: ""
  ## @param sqncNode.fullnameOverride String to fully override sqnc-node.fullname template
  ##
  fullnameOverride: ""
## @param externalSqncNode.host External SQNC-Node hostname to query
##
externalSqncNode:
  host: ""
  ## @param externalSqncNode.port External SQNC-Node port to query
  ##
  port: ""
