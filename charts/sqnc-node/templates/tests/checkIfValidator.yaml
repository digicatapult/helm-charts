{{ $fullname :=  include "sqnc-node.fullname" . }}
{{ $serviceLabels :=  include "sqnc-node.serviceLabels" .  }}
{{ $selectorLabels :=  include "sqnc-node.selectorLabels" .  }}

{{range $i := until ($.Values.node.replicas | int) }}
apiVersion: v1
kind: Pod
metadata:
  name: "{{ $fullname }}-{{ $i }}-post-install-test-suite"
  labels:
      {{- $serviceLabels | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install
spec:
  containers:
    - name: validator-check
      image: {{ $.Values.osShell.image.repository }}:{{ $.Values.osShell.image.tag }}
      command: [ "/bin/sh" ]
      args:
        - -c
        - |
          {{- if eq $.Values.node.role "validator" }}
          if [ "$ROLE" = "validator" ]; then
            # checks if finalizing blocks
            LASTBLOCKHASH=`curl -sS -H "Content-Type: application/json" -d '{"id":1, "jsonrpc":"2.0", "method": "chain_getFinalizedHead", "params": []}' "http://{{ $fullname }}-{{ $i }}:9944" | jq '.result'`

            BLOCK=`curl -sS -H "Content-Type: application/json" -d '{"id":1, "jsonrpc":"2.0", "method": "chain_getBlock", "params": ["$LATESTBLOCKHASH"]}' "http://{{ $fullname }}-{{ $i }}:9944" | jq '.result'`

            AUTHOR=`curl -sS -H "Content-Type: application/json" -d '{"id":1, "jsonrpc":"2.0", "method": "eth_coinbase", "params": []}' "http://{{ $fullname }}-{{ $i }}:9944" | jq '.result'`

            echo $LASTBLOCKHASH $BLOCK $AUTHOR

            exit 0
          else
            exit 1
          fi
          {{- end }}
      env:
        - name: RPC
          value: "{{ $fullname }}-{{ $i }}"
        - name: ROLE
          value: {{ default "unknown" $.Values.node.role }}
    - name: block-processing
      image: {{ $.Values.osShell.image.repository }}:{{ $.Values.osShell.image.tag }}
      command: [ "/bin/sh" ]
      args:
        - -c
        - |
          LASTBLOCK=`curl -sS -H "Content-Type: application/json" -d '{"id":1, "jsonrpc":"2.0", "method": "chain_getFinalizedHead", "params": []}' "http://{{ $fullname }}-{{ $i }}:9944" | jq '.result'`
          sleep 20
          NEWBLOCK=`curl -sS -H "Content-Type: application/json" -d '{"id":1, "jsonrpc":"2.0", "method": "chain_getFinalizedHead", "params": []}' "http://{{ $fullname }}-{{ $i }}:9944" | jq '.result'`
          echo $LASTBLOCK $NEWBLOCK
          if [ "$LASTBLOCK" = "$NEWBLOCK" ]; then
            echo "after 20s last finalized block has not changed"
            exit 1
          else
            exit 0
          fi
    - name: connected-nodes
      image: {{ $.Values.osShell.image.repository }}:{{ $.Values.osShell.image.tag }}
      command: [ "/bin/sh" ]
      args:
        - -c
        - |
          PEERS=`curl -sS -H "Content-Type: application/json" -d '{"id":1, "jsonrpc":"2.0", "method": "system_syncState", "params": []}' "http://{{ $fullname }}-{{ $i }}:9944" | jq '.result'`
          IS_SYNCING=`curl -sS -H "Content-Type: application/json" -d '{"id":1, "jsonrpc":"2.0", "method": "system_health", "params": []}' "http://{{ $fullname }}-{{ $i }}:9944" | jq '.result'`
          echo $IS_SYNCING $PEERS

          if [ "$PEERS" = 0 ]; then
            echo "no peers connected to this node"
            exit 1
          fi

          if [ "$IS_SYNCING" == "false" ]; then
            echo "node is currently not synchronizing"
            exit 2
          fi

          exit 0
      env:
        - name: RPC
          value: "{{ $fullname }}-{{ $i }}"

  restartPolicy: Never
{{ end }}
