## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
##

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""

## @section Common parameters
##

## @param kubeVersion Override Kubernetes version
##
kubeVersion: ""
## @param nameOverride String to partially override common.names.name
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param namespaceOverride String to fully override common.names.namespace
##
namespaceOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param clusterDomain Kubernetes cluster domain name
##
clusterDomain: cluster.local
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []

## Enable diagnostic mode in the deployment
##
diagnosticMode:
  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
  ##
  enabled: false
  ## @param diagnosticMode.command Command to override all containers in the deployment
  ##
  command:
    - sleep
  ## @param diagnosticMode.args Args to override all containers in the deployment
  ##
  args:
    - infinity

## @section WASP Event Service config parameters
##

## @param logLevel Allowed values: error, warn, info, debug
##
logLevel: "info"
## @param apiVersion Override api version presented by the service's OpenAPI specification
##
apiVersion: ""
## @param kafkaJsLogLevel Allowed values: error, warn, info, debug
##
kafkaJsLogLevel: "error"
## @param eventsNotificationTopic Kafka topic to consume events from
##
eventsNotificationTopic: event-notifications
## @param wsPingInterval Interval in milliseconds to send ping messages to the client
##
wsPingInterval: 500


## Digital Catapult wasp-ws-event-service image
## ref: https://hub.docker.com/r/digicatapult/wasp-ws-event-service/tags/
## @param image.registry wasp-ws-event-service image registry
## @param image.repository wasp-ws-event-service image repository
## @param image.tag wasp-ws-event-service image tag (immutable tags are recommended)
## @param image.digest wasp-ws-event-service image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
## @param image.pullPolicy wasp-ws-event-service image pull policy
## @param image.pullSecrets wasp-ws-event-service image pull secrets
## @param image.debug Enable wasp-ws-event-service image debug mode
##
image:
  registry: docker.io
  repository: digicatapult/wasp-ws-event-service
  tag: v0.1.1
  digest: ""
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []
  ## Enable debug mode
  ##
  debug: false
## @param replicaCount Number of wasp-ws-event-service replicas to deploy
##
replicaCount: 1
## @param containerPorts.http wasp-ws-event-service HTTP container port
##
containerPorts:
  http: 3000
## Configure extra options for wasp-ws-event-service containers' liveness and readiness probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
## @param livenessProbe.enabled Enable livenessProbe on wasp-ws-event-service containers
## @param livenessProbe.path Path for to check for livenessProbe
## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
## @param livenessProbe.periodSeconds Period seconds for livenessProbe
## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
## @param livenessProbe.successThreshold Success threshold for livenessProbe
##
livenessProbe:
  enabled: true
  path: /health
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1
## @param readinessProbe.enabled Enable readinessProbe on wasp-ws-event-service containers
## @param readinessProbe.path Path for to check for readinessProbe
## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
## @param readinessProbe.periodSeconds Period seconds for readinessProbe
## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
## @param readinessProbe.successThreshold Success threshold for readinessProbe
##
readinessProbe:
  enabled: true
  path: /health
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 5
  successThreshold: 1
## @param startupProbe.enabled Enable startupProbe on wasp-ws-event-service containers
## @param startupProbe.path Path for to check for startupProbe
## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
## @param startupProbe.periodSeconds Period seconds for startupProbe
## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe
## @param startupProbe.failureThreshold Failure threshold for startupProbe
## @param startupProbe.successThreshold Success threshold for startupProbe
##
startupProbe:
  enabled: false
  path: /health
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 10
  successThreshold: 1
## @param customLivenessProbe Custom livenessProbe that overrides the default one
##
customLivenessProbe: {}
## @param customReadinessProbe Custom readinessProbe that overrides the default one
##
customReadinessProbe: {}
## @param customStartupProbe Custom startupProbe that overrides the default one
##
customStartupProbe: {}
## wasp-ws-event-service resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
## @param resources.limits The resources limits for the wasp-ws-event-service containers
## @param resources.requests The requested resources for the wasp-ws-event-service containers
##
resources:
  limits: {}
  requests: {}
## Configure Pods Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param podSecurityContext.enabled Enabled wasp-ws-event-service pods' Security Context
## @param podSecurityContext.fsGroup Set wasp-ws-event-service pod's Security Context fsGroup
##
podSecurityContext:
  enabled: true
  fsGroup: 1001
## Configure Container Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
## @param containerSecurityContext.enabled Enabled wasp-ws-event-service containers' Security Context
## @param containerSecurityContext.runAsUser Set wasp-ws-event-service containers' Security Context runAsUser
## @param containerSecurityContext.runAsNonRoot Set wasp-ws-event-service containers' Security Context runAsNonRoot
## @param containerSecurityContext.readOnlyRootFilesystem Set wasp-ws-event-service containers' Security Context runAsNonRoot
##
containerSecurityContext:
  enabled: true
  runAsUser: 1001
  runAsNonRoot: true
  readOnlyRootFilesystem: false

## @param command Override default container command (useful when using custom images)
##
command: []
## @param args Override default container args (useful when using custom images)
##
args: []
## @param hostAliases wasp-ws-event-service pods host aliases
## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
##
hostAliases: []
## @param podLabels Extra labels for wasp-ws-event-service pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
##
podLabels: {}
## @param podAnnotations Annotations for wasp-ws-event-service pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}
## @param podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAffinityPreset: ""
## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAntiAffinityPreset: soft
## Pod Disruption Budget configuration
## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb
## @param pdb.create Enable/disable a Pod Disruption Budget creation
## @param pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
## @param pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable
##
pdb:
  create: false
  minAvailable: 1
  maxUnavailable: ""
## Autoscaling configuration
## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
## @param autoscaling.enabled Enable autoscaling for wasp-ws-event-service
## @param autoscaling.minReplicas Minimum number of wasp-ws-event-service replicas
## @param autoscaling.maxReplicas Maximum number of wasp-ws-event-service replicas
## @param autoscaling.targetCPU Target CPU utilization percentage
## @param autoscaling.targetMemory Target Memory utilization percentage
##
autoscaling:
  enabled: false
  minReplicas: ""
  maxReplicas: ""
  targetCPU: ""
  targetMemory: ""
## Node affinity preset
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
##
nodeAffinityPreset:
  ## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ##
  type: ""
  ## @param nodeAffinityPreset.key Node label key to match. Ignored if `affinity` is set
  ##
  key: ""
  ## @param nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set
  ## E.g.
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  ##
  values: []
## @param affinity Affinity for wasp-ws-event-service pods assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## NOTE: `podAffinityPreset`, `podAntiAffinityPreset`, and `nodeAffinityPreset` will be ignored when it's set
##
affinity: {}
## @param nodeSelector Node labels for wasp-ws-event-service pods assignment
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}
## @param tolerations Tolerations for wasp-ws-event-service pods assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []
## @param updateStrategy.type wasp-ws-event-service statefulset strategy type
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
##
updateStrategy:
  ## StrategyType
  ## Can be set to RollingUpdate or OnDelete
  ##
  type: RollingUpdate

## @param priorityClassName wasp-ws-event-service pods' priorityClassName
##
priorityClassName: ""
## @param topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
##
topologySpreadConstraints: []
## @param schedulerName Name of the k8s scheduler (other than default) for wasp-ws-event-service pods
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
schedulerName: ""
## @param terminationGracePeriodSeconds Seconds Redmine pod needs to terminate gracefully
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
##
terminationGracePeriodSeconds: ""
## @param lifecycleHooks for the wasp-ws-event-service container(s) to automate configuration before or after startup
##
lifecycleHooks: {}
## @param extraEnvVars Array with extra environment variables to add to wasp-ws-event-service nodes
## e.g:
## extraEnvVars:
##   - name: FOO
##     value: "bar"
##
extraEnvVars: []
## @param extraEnvVarsCM Name of existing ConfigMap containing extra env vars for wasp-ws-event-service nodes
##
extraEnvVarsCM: ""
## @param extraEnvVarsSecret Name of existing Secret containing extra env vars for wasp-ws-event-service nodes
##
extraEnvVarsSecret: ""
## @param extraVolumes Optionally specify extra list of additional volumes for the wasp-ws-event-service pod(s)
##
extraVolumes: []
## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts for the wasp-ws-event-service container(s)
##
extraVolumeMounts: []
## @param sidecars Add additional sidecar containers to the wasp-ws-event-service pod(s)
## e.g:
## sidecars:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
sidecars: []
## @param initContainers Add additional init containers to the wasp-ws-event-service pod(s)
## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
## e.g:
## initContainers:
##  - name: your-image-name
##    image: your-image
##    imagePullPolicy: Always
##    command: ['sh', '-c', 'echo "hello world"']
##
initContainers: []

## @section Traffic Exposure Parameters
##

## wasp-ws-event-service service parameters
##
service:
  ## @param service.type wasp-ws-event-service service type
  ##
  type: ClusterIP
  ## @param service.ports.http wasp-ws-event-service service HTTP port
  ##
  ports:
    http: 3000
  ## Node ports to expose
  ## @param service.nodePorts.http Node port for HTTP
  ## NOTE: choose port between <30000-32767>
  ##
  nodePorts:
    http: ""
  ## @param service.clusterIP wasp-ws-event-service service Cluster IP
  ## e.g.:
  ## clusterIP: None
  ##
  clusterIP: ""
  ## @param service.loadBalancerIP wasp-ws-event-service service Load Balancer IP
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
  ##
  loadBalancerIP: ""
  ## @param service.loadBalancerSourceRanges wasp-ws-event-service service Load Balancer sources
  ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ## e.g:
  ## loadBalancerSourceRanges:
  ##   - 10.10.10.0/24
  ##
  loadBalancerSourceRanges: []
  ## @param service.externalTrafficPolicy wasp-ws-event-service service external traffic policy
  ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster
  ## @param service.annotations Additional custom annotations for wasp-ws-event-service service
  ##
  annotations: {}
  ## @param service.extraPorts Extra ports to expose in wasp-ws-event-service service (normally used with the `sidecars` value)
  ##
  extraPorts: []
  ## @param service.sessionAffinity Control where client requests go, to the same pod or round-robin
  ## Values: ClientIP or None
  ## ref: https://kubernetes.io/docs/user-guide/services/
  ##
  sessionAffinity: None
  ## @param service.sessionAffinityConfig Additional settings for the sessionAffinity
  ## sessionAffinityConfig:
  ##   clientIP:
  ##     timeoutSeconds: 300
  ##
  sessionAffinityConfig: {}

## wasp-ws-event-service ingress parameters
## ref: http://kubernetes.io/docs/user-guide/ingress/
##
ingress:
  ## @param ingress.enabled Enable ingress record generation for wasp-ws-event-service
  ##
  enabled: true
  ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
  ##
  apiVersion: ""
  ## @param ingress.hostname Default host for the ingress record
  ##
  hostname: wasp-ws-event-service.local
  ## @param ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
  ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
  ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
  ##
  ingressClassName: ""
  ## @param ingress.paths[0].path Default event websocket Path
  ## @param ingress.paths[0].pathType Default event websocket PathType
  ## e.g:
  ## paths:
  ##   - path: /
  ##     pathType: Prefix
  paths:
    - path: /thing/[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}/event
      pathType: Prefix
  ## @param ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
  ## Use this parameter to set the required annotations for cert-manager, see
  ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  ## e.g:
  ## annotations:
  ##   kubernetes.io/ingress.class: nginx
  ##   cert-manager.io/cluster-issuer: cluster-issuer-name
  ##
  annotations: {}
  ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
  ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
  ## You can:
  ##   - Use the `ingress.secrets` parameter to create this TLS secret
  ##   - Rely on cert-manager to create it by setting the corresponding annotations
  ##   - Rely on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
  ##
  tls: false
  ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
  ##
  selfSigned: false
  ## @param ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
  ## e.g:
  ## extraHosts:
  ##   - name: wasp-ws-event-service.local
  ##     path: /
  ##
  extraHosts: []
  ## @param ingress.extraPaths An array with additional arbitrary paths that may need to be added to the ingress under the main host
  ## e.g:
  ## extraPaths:
  ## - path: /*
  ##   backend:
  ##     serviceName: ssl-redirect
  ##     servicePort: use-annotation
  ##
  extraPaths: []
  ## @param ingress.extraTls TLS configuration for additional hostname(s) to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## e.g:
  ## extraTls:
  ## - hosts:
  ##     - wasp-ws-event-service.local
  ##   secretName: wasp-ws-event-service.local-tls
  ##
  extraTls: []
  ## @param ingress.secrets Custom TLS certificates as secrets
  ## NOTE: 'key' and 'certificate' are expected in PEM format
  ## NOTE: 'name' should line up with a 'secretName' set further up
  ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
  ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  ## e.g:
  ## secrets:
  ##   - name: wasp-ws-event-service.local-tls
  ##     key: |-
  ##       -----BEGIN RSA PRIVATE KEY-----
  ##       ...
  ##       -----END RSA PRIVATE KEY-----
  ##     certificate: |-
  ##       -----BEGIN CERTIFICATE-----
  ##       ...
  ##       -----END CERTIFICATE-----
  ##
  secrets: []
  ## @param ingress.extraRules Additional rules to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
  ## e.g:
  ## extraRules:
  ## - host: example.local
  ##     http:
  ##       path: /
  ##       backend:
  ##         service:
  ##           name: example-svc
  ##           port:
  ##             name: http
  ##
  extraRules: []

## @section Init Container Parameters
##
## @param initEventNotifications.enable Initialise the event-notifications topics as an init container
## @param initEventNotifications.partitions Number of Partitions to create topic with
## @param initEventNotifications.replicationFactor Replication factor for topic
initEventNotifications:
  enable: true
  partitions: 30
  replicationFactor: 1

  ## Kafka image
  ## @param initEventNotifications.image.registry Kafka image registry
  ## @param initEventNotifications.image.repository Kafka image repository
  ## @param initEventNotifications.image.tag Kafka image tag (immutable tags are recommended)
  ## @param initEventNotifications.image.digest Kafka image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
  ## @param initEventNotifications.image.pullPolicy Kafka image pull policy
  ## @param initEventNotifications.image.pullSecrets Kafka image pull secrets
  ##
  image:
    registry: docker.io
    repository: bitnami/kafka
    tag: '3.4-debian-11'
    digest: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []

## @section Other Parameters
##

## ServiceAccount configuration
##
serviceAccount:
  ## @param serviceAccount.create Specifies whether a ServiceAccount should be created
  ##
  create: true
  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the common.names.fullname template
  ##
  name: ""
  ## @param serviceAccount.annotations Additional Service Account annotations (evaluated as a template)
  ##
  annotations: {}
  ## @param serviceAccount.automountServiceAccountToken Automount service account token for the server service account
  ##
  automountServiceAccountToken: true

## @section Kafka chart parameters
##
## Kafka chart configuration
## For information about these parameters, refer to:
##   https://github.com/bitnami/charts/blob/main/bitnami/kafka/values.yaml
##
kafka:
  ## @param kafka.enabled Enable/disable Kafka chart installation
  ##
  enabled: true
  ## @param kafka.replicaCount Number of Kafka brokers
  ##
  replicaCount: 1
  auth:
    ## @param kafka.auth.clientProtocol Authentication protocol for communications with clients. Allowed protocols: plaintext, tls, mtls, sasl and sasl_tls
    ##
    clientProtocol: plaintext
    ## @param kafka.auth.interBrokerProtocol Authentication protocol for inter-broker communications. Allowed protocols: plaintext, tls, mtls, sasl and sasl_tls
    ##
    interBrokerProtocol: plaintext
    ## TLS configuration
    ##
    tls:
      ## @param kafka.auth.tls.existingSecrets Array existing secrets containing the TLS certificates for the Kafka brokers
      ## When using 'jks' format for certificates, each secret should contain a truststore and a keystore.
      ## Create these secrets following the steps below:
      ## 1) Generate your truststore and keystore files. Helpful script: https://raw.githubusercontent.com/confluentinc/confluent-platform-security-tools/master/kafka-generate-ssl.sh
      ## 2) Rename your truststore to `kafka.truststore.jks`.
      ## 3) Rename your keystores to `kafka-X.keystore.jks` where X is the ID of each Kafka broker.
      ## 4) Run the command below one time per broker to create its associated secret (SECRET_NAME_X is the name of the secret you want to create):
      ##       kubectl create secret generic SECRET_NAME_0 --from-file=kafka.truststore.jks=./kafka.truststore.jks --from-file=kafka.keystore.jks=./kafka-0.keystore.jks
      ##       kubectl create secret generic SECRET_NAME_1 --from-file=kafka.truststore.jks=./kafka.truststore.jks --from-file=kafka.keystore.jks=./kafka-1.keystore.jks
      ##       ...
      ##
      ## When using 'pem' format for certificates, each secret should contain a public CA certificate, a public certificate and one private key.
      ## Create these secrets following the steps below:
      ## 1) Create a certificate key and signing request per Kafka broker, and sign the signing request with your CA
      ## 2) Rename your CA file to `kafka.ca.crt`.
      ## 3) Rename your certificates to `kafka-X.tls.crt` where X is the ID of each Kafka broker.
      ## 3) Rename your keys to `kafka-X.tls.key` where X is the ID of each Kafka broker.
      ## 4) Run the command below one time per broker to create its associated secret (SECRET_NAME_X is the name of the secret you want to create):
      ##       kubectl create secret generic SECRET_NAME_0 --from-file=ca.crt=./kafka.ca.crt --from-file=tls.crt=./kafka-0.tls.crt --from-file=tls.key=./kafka-0.tls.key
      ##       kubectl create secret generic SECRET_NAME_1 --from-file=ca.crt=./kafka.ca.crt --from-file=tls.crt=./kafka-1.tls.crt --from-file=tls.key=./kafka-1.tls.key
      ##       ...
      ##
      existingSecrets: []
      ## @param kafka.auth.tls.password Password to access the JKS files or PEM key when they are password-protected.
      ## Note: ignored when using 'existingSecret'.
      ##
      password: ""
      ## @param kafka.auth.tls.endpointIdentificationAlgorithm The endpoint identification algorithm to validate server hostname using server certificate
      ## Disable server host name verification by setting it to an empty string.
      ## ref: https://docs.confluent.io/current/kafka/authentication_ssl.html#optional-settings
      ##
      endpointIdentificationAlgorithm: https
    sasl:
      jaas:
        ## @param kafka.auth.sasl.jaas.clientUsers [array] Kafka client users for SASL authentication
        ##
        clientUsers:
          - user
        ## @param kafka.auth.sasl.jaas.clientPasswords Kafka client passwords for SASL authentication
        ##
        clientPasswords: []
        ## @param kafka.auth.sasl.jaas.interBrokerUser Kafka inter broker communication user for SASL authentication
        ##
        interBrokerUser: admin
        ## @param kafka.auth.sasl.jaas.interBrokerPassword Kafka inter broker communication password for SASL authentication
        ##
        interBrokerPassword: ""
        ## @param kafka.auth.sasl.jaas.zookeeperUser Kafka Zookeeper user for SASL authentication
        ##
        zookeeperUser: ""
        ## @param kafka.auth.sasl.jaas.zookeeperPassword Kafka Zookeeper password for SASL authentication
        ##
        zookeeperPassword: ""
        ## @param kafka.auth.sasl.jaas.existingSecret Name of the existing secret containing credentials for brokerUser, interBrokerUser and zookeeperUser
        ##
        existingSecret: ""
  service:
    ## @param kafka.service.ports.client Kafka service port for client connections
    ##
    ports:
      client: 9092
  ##
  ## Zookeeper chart configuration
  ## For information about these parameters, refer to:
  ##   https://github.com/bitnami/charts/blob/main/bitnami/zookeeper/values.yaml
  ##
  zookeeper:
    ## @param kafka.zookeeper.enabled Enable/disable Zookeeper chart installation
    ##
    enabled: true
    ## @param kafka.zookeeper.replicaCount Number of Zookeeper replicas
    ##
    replicaCount: 1
    ## @param kafka.zookeeper.auth [object] Zookeeper auth settings
    auth:
      client:
        enabled: false
        clientUser: zookeeperUser
        clientPassword: ""
        serverUsers: zookeeperUser
        serverPasswords: ""
        existingSecret: ""
##
## External Kafka Configuration
## All of these values are only used when kafka.enabled is set to false
##
externalKafka:
  ## @param externalKafka.brokers Array of Kafka brokers to connect to. Format: protocol://broker_hostname:port
  ##
  brokers:
    - localhost:9092
  ## Authentication parameters
  ## @param externalKafka.auth.protocol                   Authentication protocol. Allowed protocols: plaintext, tls, sasl and sasl_tls
  ## @param externalKafka.auth.jaas.user                  User for SASL authentication
  ## @param externalKafka.auth.jaas.password              Password for SASL authentication
  ##
  auth:
    ## Authentication protocol
    ## Supported values: 'plaintext', 'tls', sasl' and 'sasl_tls'
    ## This table shows the security provided on each protocol:
    ## | Method    | Authentication                | Encryption via TLS |
    ## | plaintext | None                          | No                 |
    ## | tls       | None                          | Yes                |
    ## | sasl      | Yes (via SASL)                | No                 |
    ## | sasl_tls  | Yes (via SASL)                | Yes                |
    ##
    protocol: plaintext
    ## JAAS configuration for SASL authentication
    ## MANDATORY when protocol is 'sasl' or 'sasl_tls'
    ##
    jaas:
      user: user
      password: ""
